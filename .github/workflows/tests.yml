name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    name: Test and Coverage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libboost-dev gcc g++ ccache cmake libhwloc-dev

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          pip-${{ runner.os }}-

    - name: Install Python dependencies
      run: pip install gcovr

    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.26'
      continue-on-error: true

    - name: Verify CMake installation
      run: |
        cmake --version
        if [ $? -ne 0 ]; then
          echo "CMake setup action failed, using system cmake"
          sudo apt-get install -y cmake
          cmake --version
        fi

    - name: Create ccache directory
      run: mkdir -p ~/.ccache

    - name: Setup ccache
      uses: actions/cache@v4
      with:
        path: ~/.ccache
        key: ccache-test-${{ runner.os }}-${{ hashFiles('**/*.cpp', '**/*.hpp') }}
        restore-keys: |
          ccache-test-${{ runner.os }}-
          ccache-build-${{ runner.os }}-

    - name: Cache CMake build directory
      uses: actions/cache@v4
      with:
        path: |
          build/_deps
          build/CMakeCache.txt
          build/CMakeFiles
        key: cmake-test-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt', 'CMakePresets.json') }}
        restore-keys: |
          cmake-test-${{ runner.os }}-
          cmake-build-${{ runner.os }}-

    - name: Configure ccache
      run: |
        ccache --set-config=max_size=400M
        ccache --set-config=compression=true
        ccache --zero-stats

    - name: Configure CMake with tests and coverage
      run: |
        cmake -B build \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache \
          -DIOSCHED_ENABLE_TESTS=ON \
          -DIOSCHED_ENABLE_COVERAGE=ON

    - name: Build with tests
      run: cmake --build build

    - name: Print ccache stats
      run: ccache --show-stats

    - name: Run tests
      run: ctest --test-dir build --output-on-failure

    - name: Generate coverage report
      run: cmake --build build --target coverage

    - name: Generate coverage XML
      run: cmake --build build --target coverage-xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./build/coverage/coverage.xml

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: build/coverage/
        retention-days: 7
